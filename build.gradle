buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = 'https://dist.creeper.host/Sponge/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version "4.0.4"
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'

mixin {
    add sourceSets.main, "abnormals_core.refmap.json"
}

configurations {
    shade
}

version = '2.0.9'
group = 'com.minecraftabnormals'
archivesBaseName = 'Abnormals-Core-1.16.1'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    mappings channel: 'snapshot', version: '20200723-1.16.1'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            arg "-mixin.config=abnormals_core.mixins.json"
            mods {
                abnormals_core {
                    source sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            arg "-mixin.config=abnormals_core.mixins.json"
            mods {
                abnormals_core {
                    source sourceSets.main
                }
            }
        }
        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'abnormals_core', '--all', '--output', file('src/generated/resources/')
            mods {
                abnormals_core {
                    source sourceSets.main
                }
            }
        }
    }
}

task deobfJar(type: Jar) {
    description = 'Creates a JAR containing the non-obfuscated compiled code.'
    from sourceSets.main.output
    classifier = "deobf"
}

artifacts {
    archives deobfJar
}

jar {
    classifier = "slim"
    manifest {
        attributes([
            "Specification-Title": "Abnormals Core",
            "Specification-Vendor": "Team Abnormals",
            "Specification-Version": "1",
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor": "Team Abnormals",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "MixinConfigs": "abnormals_core.mixins.json"
        ])
    }
}

repositories {
    maven {
        url = "https://jitpack.io"
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.1-32.0.72'

    compileOnly fg.deobf("com.github.Ocelot5836:Sonar:3aa1f1f:api")
    runtimeOnly fg.deobf("com.github.Ocelot5836:Sonar:3aa1f1f")
    shade "com.github.Ocelot5836:Sonar:3aa1f1f"
}

shadowJar {
    configurations = [project.configurations.shade]
    classifier = null
}

reobf {
    shadowJar {}
}

artifacts {
    archives jar
    archives shadowJar
}

build.dependsOn reobfShadowJar 